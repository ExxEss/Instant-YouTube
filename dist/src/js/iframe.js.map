{"version":3,"sources":["webpack://instant-youtube/./src/js/iframe.js"],"names":[],"mappings":";;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC,qBAAqB,+BAA+B;;AAErD;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,E","file":"./src/js/iframe.js","sourcesContent":["let video = null, \n    neverPlayed = true;\n\nlet isVideoPlaying = function(video) {\n    return video !== null && video.currentTime > 0 && !video.paused &&\n    !video.ended && video.readyState > 2;\n};\n\nlet isSelectable = function(element) {\n    var unselectableTypes;\n    if (!(element instanceof Element)) {\n        return false;\n    }\n\n    unselectableTypes = [\"button\", \"checkbox\", \"color\",\n        \"file\", \"hidden\", \"image\", \"radio\", \"reset\", \"submit\"];\n    return (element.nodeName.toLowerCase() === \"input\" &&\n        unselectableTypes.indexOf(element.type) === -1) ||\n        element.nodeName.toLowerCase() === \"textarea\" ||\n        element.isContentEditable;\n}\n\nnew MutationObserver(() => {\n  try {\n      if (!video && neverPlayed) {\n        video = document.querySelector('video');\n        if (video) {\n           video.focus();\n           video.loop = true;\n           video.autoPictureInPicture = true;\n           neverPlayed = false;\n        }\n      }\n  } catch (e) {\n      console.log(e);\n  }\n}).observe(document, {childList: true, subtree: true});\n\n// window.addEventListener(\"visibilitychange\", () => {\n//   if (video){\n//     if (document.pictureInPictureElement) {\n//       video.exitPictureInPicture();\n//     } else {\n//       video.requestPictureInPicture();\n//     }\n//   }\n// });\n\nwindow.addEventListener(\"keydown\", function (e) {\n  console.log(window.location.href);\n  const activeElement = document.activeElement;\n  if (isSelectable(activeElement)) {\n      return;\n  }\n\n  if (e.key === \"Escape\")\n    parent.postMessage('removeVideo',\"*\");\n\n  if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n      e.stopImmediatePropagation();\n      e.preventDefault();\n\n      if (video !== undefined && video !== null) {\n          if (e.key === 'ArrowLeft') {\n              video.currentTime -= 15;\n          } else {\n              video.currentTime += 15;\n          }\n          return;\n      }\n  }\n\n  if (e.key === ' ') {\n      if (video !== undefined && video !== null) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n\n        if (isVideoPlaying(video)) {\n            video.pause();\n            video.blur();\n        } else {\n            video.play();\n        }\n      }\n  }\n}, true);\n\nwindow.onmessage = (e) => {\n  if (e.data.focus === true) video.focus();\n};"],"sourceRoot":""}